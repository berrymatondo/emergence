// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


enum UserStatuses {
 ACTIF
 INACTIF
}

enum UserRoles {
 AGENT
 ADMIN
}


enum CouponBasisList {
  AA
  A0
  A5
}

enum CurrencyList {
  EUR
  USD
  CDF
}


enum CountryList {
AFGHANISTAN @map("Afghanistan")
TOGO @map("Togo")
RD_CONGO @map("RD Congo")
ALL @map("ALL")
}

enum DataTypeList {
  L
  H
}




model User {
  id Int @id @default(autoincrement())
  email String @unique
  password String
  username String @unique
  status UserStatuses @default(INACTIF)
  role UserRoles @default(AGENT)
  country CountryList @default(ALL)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")

}

model Overview {
  id Int @id @default(autoincrement())
  key String @unique
  value String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("overview")

}

model Country {
  id Int @id @default(autoincrement())
  name String @unique
  yieldCurves YieldCurve[]
  continentId Int
  continent Continent @relation(fields: [continentId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("countries")

}

model Continent {
  id Int @id @default(autoincrement())
  name String @unique
  yieldCurves YieldCurve[]
  countries Country[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("continents")

}


model YieldCurve{
  id Int @id @default(autoincrement())
  tenor Int
  yield Float
  change Float @default(0)
  date String
  //country Boolean
  type DataTypeList @default(H)

  countryId Int?
  country Country? @relation(fields: [countryId], references: [id])

  continentId Int?
  continent Continent? @relation(fields: [continentId], references: [id])


  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

 // @@unique([tenor, date, country])

  @@map("yieldcurve")
}


model FXRates{
  id Int @id @default(autoincrement())
  date String 
  usdcdf Float @default(0)
  usdeur Float @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("fxrates")
}

model BCCIntRates{
  id Int @id @default(autoincrement())
  date String 
  rate Float @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("bccintrates")
}



model ZCRates{
  id Int @id @default(autoincrement())
  tenor Int
  rate Float
  change Float @default(0)
  date String
  type DataTypeList @default(H)
  currencyId Int
  currency Currency @relation(fields: [currencyId], references: [id])


  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

 // @@unique([tenor, date, country])

  @@map("zcrates")
}


model Currency{
  id Int @id @default(autoincrement())
  code String @unique
  name String
  zcRates ZCRates[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("currencies")
}



model AmortizationSchedule{
  id Int @id @default(autoincrement())
  date String
  rate Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("amortizationschedule")
}
