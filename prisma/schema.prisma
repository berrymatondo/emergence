// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


enum UserStatuses {
 ACTIF
 INACTIF
}

enum UserRoles {
 AGENT
 ADMIN
}


enum CouponBasisList {
  AA
  A0
  A5
}

enum CurrencyList {
  EUR
  USD
  CDF
}


enum CountryList {
AFGHANISTAN @map("Afghanistan")
TOGO @map("Togo")
RD_CONGO @map("RD Congo")
ALL @map("ALL")
}

enum DataTypeList {
  L
  H
}




model User {
  id Int @id @default(autoincrement())
  email String @unique
  password String
  username String @unique
  status UserStatuses @default(INACTIF)
  role UserRoles @default(AGENT)
  country CountryList @default(ALL)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")

}

model Overview {
  id Int @id @default(autoincrement())
  key String @unique
  value String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("overview")

}


model YieldCurve{
  id Int @id @default(autoincrement())
  tenor Int
  yield Float
  change Float @default(0)
  date String
  country Boolean
  type DataTypeList @default(H)


  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([tenor, date, country])

  @@map("yieldcurve")
}


model FXRates{
  id Int @id @default(autoincrement())
  date String @unique
  usdcdf Float @default(0)
  usdeur Float @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("fxrates")
}

model BCCIntRates{
  id Int @id @default(autoincrement())
  date String @unique
  rate Float @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("bccintrates")
}

