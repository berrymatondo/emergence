// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


enum UserStatuses {
 ACTIF
 INACTIF
}

enum UserRoles {
 AGENT
 ADMIN
}


enum CouponBasisList {
  AA
  A0
  A5
}

enum CurrencyList {
  EUR
  USD
  CDF
}


enum CountryList {
AFGHANISTAN @map("Afghanistan")
TOGO @map("Togo")
RD_CONGO @map("RD Congo")
ALL @map("ALL")
}

enum DataTypeList {
  L
  H
}


model User {
  id Int @id @default(autoincrement())
  email String @unique
  password String
  username String @unique
  status UserStatuses @default(INACTIF)
  role UserRoles @default(AGENT)
  country CountryList @default(ALL)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")

}

model Overview {
  id Int @id @default(autoincrement())
  key String @unique
  value String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("overview")

}

model Country {
  id Int @id @default(autoincrement())
  name String @unique
  yieldCurves YieldCurve[]
  continentId Int
  continent Continent @relation(fields: [continentId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("countries")

}

model Continent {
  id Int @id @default(autoincrement())
  name String @unique
  yieldCurves YieldCurve[]
  countries Country[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("continents")

}


model YieldCurve{
  id Int @id @default(autoincrement())
  tenor Int
  yield Float
  change Float @default(0)
  date String
  //country Boolean
  type DataTypeList @default(H)

  countryId Int?
  country Country? @relation(fields: [countryId], references: [id])

  continentId Int?
  continent Continent? @relation(fields: [continentId], references: [id])


  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

 // @@unique([tenor, date, country])

  @@map("yieldcurve")
}


model FXRates{
  id Int @id @default(autoincrement())
  date String 
  usdcdf Float @default(0)
  usdeur Float @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("fxrates")
}

model BCCIntRates{
  id Int @id @default(autoincrement())
  date String 
  rate Float @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("bccintrates")
}



model ZCRates{
  id Int @id @default(autoincrement())
  tenor Int
  rate Float
  change Float @default(0)
  date String
  type DataTypeList @default(H)
  currencyId Int
  currency Currency @relation(fields: [currencyId], references: [id])


  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

 // @@unique([tenor, date, country])

  @@map("zcrates")
}


model Currency{
  id Int @id @default(autoincrement())
  code String @unique
  name String
  zcRates ZCRates[]
  forwardRates ForwardRate[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("currencies")
}



model AmortizationSchedule{
  id Int @id @default(autoincrement())
  date String
  rate Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("amortizationschedule")
}


model ForwardRate{
  id Int @id @default(autoincrement())
  tenor Float
  rate Float
  label String
  type DataTypeList @default(H)
  currencyId Int
  currency Currency @relation(fields: [currencyId], references: [id]) 

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("forwardrate")
}


model StepUpRate{
  id Int @id @default(autoincrement())
  tenor Float
  rate Float
  //type DataTypeList @default(H)
  //currencyId Int
  //currency Currency @relation(fields: [currencyId], references: [id]) 

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("stepuprate")
}


model Commo{
  id Int @id @default(autoincrement())
  name String
  commoForwardRate CommoForwardRate[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("commo")
}

model CommoForwardRate{
  id Int @id @default(autoincrement())
  tenor Float
  rate Float
  type DataTypeList @default(H)
  commoId Int
  commo Commo @relation(fields: [commoId], references: [id]) 

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("commoforwardrate")
}


model AmortizationCommoSchedule{
  id Int @id @default(autoincrement())
  date String
  rate Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("amortizationcommoschedule")
}


model FinancingOptions{
  id Int @id @default(autoincrement())
  code String
  valuationType String
  couponBasis String
  couponRate Float
  couponFrequency Float
  maturity Int
  rating String
  notional Float
  maturityDate String
  issueDate String
  firstCouponDate String
  valuationDate String
  currency String
  recovering Float
  modality String

  cma Float @default(0)
  bondPrice Float @default(0)
  duration Float @default(0)
  defProba Float @default(0)
  refinRisk Float @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("financingoptions")
}


model Reserve{
  id Int @id @default(autoincrement())
  tenor Float
  value Float

  code String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("reserve")
}


model cashflow{
  id Int @id @default(autoincrement())
  date Float
  value Float

  code String
  optId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("cashflow")
}


model TransitionMatrix{
  id Int @id @default(autoincrement())
    order Int @default(0)
  label String @unique
  AAA Float
  AA Float
  A Float
  BBB Float
  BB Float
  B Float
  CCC_C Float
  D Float
  NR Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("transitionMatrix")
}


model DefaultMatrix{
  id Int @id @default(autoincrement())
    order Int @default(0)
  label String @unique
  y1 Float
  y2 Float
  y3 Float
  y4 Float
  y5 Float
  y6 Float
  y7 Float
  y8 Float
  y9 Float
  y10 Float


  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("defaultMatrix")
}



model ImpliciteMatrix{
  id Int @id @default(autoincrement())
  order Int @default(0)
  label String @unique
  AAA Float
  AA Float
  A Float
  BBB Float
  BB Float
  B Float
  CCC_C Float
  D Float
  NR Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("impliciteMatrix")
}


model Croissance{
  id Int @id @default(autoincrement())
  type String 
  subType String ?
  year Int
  croissance Float
  debtExtPIB Float
  txInternational Float
  creditSpread Float
  txInterieur Float
  infNat Float
  infMon Float
  soldePrim Float
  exportation Float
  inportation Float
  rendement Float
  invest Float
  debtIntPIB Float
  variantion Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("croissance")
}



